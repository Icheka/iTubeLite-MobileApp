{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/icheka/Work/Personal Projects/React Native/iTubeLite-MobileApp/screens/Login.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { GS } from \"../styles/global\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport BlockButton from \"../components/BlockButton\";\nimport { createAlert } from \"../fx\";\nimport User from \"../classes/User\";\nimport FontText from \"../components/FontText\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var height = Dimensions.get(\"window\").height;\n      var width = Dimensions.get(\"window\").width;\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: GS.signup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/signupscreen.jpg\"),\n        style: _objectSpread(_objectSpread({}, GS.imageBgItemsCentered), {}, {\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'rgba(0,0,0,0)'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: -height / 8,\n          marginBottom: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, React.createElement(FontText, {\n        style: {\n          color: 'white',\n          fontSize: 35,\n          fontStyle: 'underline'\n        },\n        font: \"DancingScriptRegular\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"iTube Lite\")), React.createElement(View, {\n        style: GS.inputGroupInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"email\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: GS.inputWithIcon,\n        onChangeText: function onChangeText(v) {\n          return _this2.setState({\n            email: v\n          });\n        },\n        placeholder: \"Email Address\",\n        placeholderTextColor: \"white\",\n        autoCompleteType: \"email\",\n        keyboardType: \"email-address\",\n        returnKeyLabel: \"Dismiss Keyboard\",\n        returnKeyType: \"done\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: GS.inputGroupInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"lock\",\n        size: 24,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }), React.createElement(TextInput, {\n        style: GS.inputWithIcon,\n        onChangeText: function onChangeText(v) {\n          return _this2.setState({\n            password: v\n          });\n        },\n        placeholder: \"Password\",\n        placeholderTextColor: \"white\",\n        autoCompleteType: \"password\",\n        returnKeyLabel: \"Dismiss Keyboard\",\n        returnKeyType: \"done\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, React.createElement(BlockButton, {\n        title: \"Sign In\",\n        disabled: this.state.password.length < 6,\n        onpress: function onpress() {\n          return _this2.logIn();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: 20,\n          backgroundColor: 'rgba(0,0,0,0.27)',\n          paddingHorizontal: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, \"Don't have an account?\"), React.createElement(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Signup\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }, {\n    key: \"logIn\",\n    value: function logIn() {\n      var user = new User();\n      var payload = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      user.signIn(payload);\n      setTimeout(function () {\n        if (user.data.data) {\n          createAlert(\"Welcome\", \"Sign in successful!\");\n        } else {\n          createAlert(\"Error\", user.data.response.data);\n        }\n      }, 5000);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/icheka/Work/Personal Projects/React Native/iTubeLite-MobileApp/screens/Login.jsx"],"names":["React","Component","GS","MaterialIcons","BlockButton","createAlert","User","FontText","Login","props","state","email","password","height","Dimensions","get","width","Keyboard","dismiss","signup","require","imageBgItemsCentered","flexDirection","justifyContent","alignItems","backgroundColor","marginTop","marginBottom","color","fontSize","fontStyle","inputGroupInput","inputWithIcon","v","setState","length","logIn","paddingHorizontal","navigation","navigate","user","payload","signIn","setTimeout","data","response"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    View, Text, ImageBackground, \n    Dimensions, TextInput, Button,\n    Keyboard, TouchableWithoutFeedback,\n} from 'react-native';\nimport { GS } from '../styles/global';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport BlockButton from '../components/BlockButton';\nimport { createAlert } from '../fx';\nimport User from '../classes/User';\nimport FontText from '../components/FontText';\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    render() {\n        const height = Dimensions.get(\"window\").height;\n        const width = Dimensions.get(\"window\").width;\n\n        return (\n            <TouchableWithoutFeedback onPress={ () => Keyboard.dismiss() }>\n                <View style={ GS.signup }>\n                    <ImageBackground\n                        source={ require(\"../assets/signupscreen.jpg\") }\n                        style={{\n                            ...GS.imageBgItemsCentered,\n                            flexDirection: 'column',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            backgroundColor: 'rgba(0,0,0,0)'\n                        }}\n                    >\n                        <View style={{\n                            marginTop: -height/8,\n                            marginBottom: 50,\n                        }}>\n                            <FontText\n                                style={{\n                                    color: 'white',\n                                    fontSize: 35,\n                                    fontStyle: 'underline',\n                                    }}\n                                font=\"DancingScriptRegular\"\n                            >\n                            iTube Lite\n                            </FontText>\n                        </View>\n                        <View style={ GS.inputGroupInput }>\n                            <MaterialIcons \n                                name=\"email\"\n                                size={24}\n                                color=\"white\"\n                            />\n                            <TextInput\n                                style={ GS.inputWithIcon }\n                                onChangeText={ v => this.setState({ email: v }) }\n                                placeholder=\"Email Address\"\n                                placeholderTextColor=\"white\"\n                                autoCompleteType=\"email\"\n                                keyboardType=\"email-address\"\n                                returnKeyLabel=\"Dismiss Keyboard\"\n                                returnKeyType=\"done\"\n                            />\n                        </View>\n                        <View style={ GS.inputGroupInput }>\n                            <MaterialIcons \n                                name=\"lock\"\n                                size={24}\n                                color=\"white\"\n                            />\n                            <TextInput\n                                style={ GS.inputWithIcon }\n                                onChangeText={ v => this.setState({ password: v }) }\n                                placeholder=\"Password\"\n                                placeholderTextColor=\"white\"\n                                autoCompleteType=\"password\"\n                                returnKeyLabel=\"Dismiss Keyboard\"\n                                returnKeyType=\"done\"\n                                secureTextEntry={true}\n                            />\n                        </View>\n                        <View>\n                            <BlockButton\n                                title=\"Sign In\"\n                                disabled={ this.state.password.length < 6 }\n                                onpress={ () => this.logIn() }\n                            />\n                        </View>\n                        <View style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            marginTop: 20,\n                            backgroundColor: 'rgba(0,0,0,0.27)',\n                            paddingHorizontal: 10\n                        }}>\n                            <Text style={{ color: 'white', fontSize: 20 }}>Don't have an account?</Text>\n                            <Button\n                                title=\"Register\"\n                                onPress={ () => this.props.navigation.navigate(\"Signup\") }\n                            />\n                        </View>\n                    </ImageBackground>\n                </View>\n            </TouchableWithoutFeedback>\n        )\n    }   \n\n    logIn() {\n        const user = new User();\n        const payload = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        user.signIn(payload);\n\n        setTimeout(() => {\n            if (user.data.data) {\n                createAlert(\n                    \"Welcome\",\n                    \"Sign in successful!\"\n                );\n                //redirect to 'Home' screen\n                //persist data\n            } else {\n                createAlert(\n                    \"Error\",\n                    user.data.response.data\n                );\n            }\n        }, 5000);\n    }\n\n}"]},"metadata":{},"sourceType":"module"}